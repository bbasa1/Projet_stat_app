# summary(sous_data_merged$Souhaite_davantage_travailler)
# # les NA sont ils des 999 mal classés ? Ou des filtrés ?
# sous_data_merged[is.na(Souhaite_davantage_travailler)== "TRUE", id_na_Souhaite_davantage_travailler:= 1]
# table(sous_data_merged$id_na_Souhaite_davantage_travailler)
# table(sous_data_merged$id_na_Souhaite_davantage_travailler,sous_data_merged$Recherche_un_emploi)# filtre : elles ne recherchent pas un emploi donc elles ne souhaient pas travailler
# table(sous_data_merged$id_na_Souhaite_davantage_travailler,sous_data_merged$Souhaite_travailler)# les NA proviennent du Filtre
#
# # Disponible_pour_travailler : Aucun problème
# table(sous_data_merged$Disponible_pour_travailler)
# summary(sous_data_merged$Disponible_pour_travailler)
#
# # Recherche_un_emploi : Aucun problème
# table(sous_data_merged$Recherche_un_emploi)
# summary(sous_data_merged$Recherche_un_emploi)
#
# # Raison_absence_recherche : 339016 NA
# #  filtre : WANTWORK = 1 / Recherche_un_emploi
# table(sous_data_merged$Raison_absence_recherche)
# summary(sous_data_merged$Raison_absence_recherche)
# # les NA sont ils des 999 mal classés ? Ou des filtrés ?
# sous_data_merged[is.na(Raison_absence_recherche)== "TRUE", id_na_Raison_absence_recherche:= 1]
# table(sous_data_merged$id_na_Raison_absence_recherche)
# table(sous_data_merged$id_na_Raison_absence_recherche,sous_data_merged$Souhaite_travailler)# filtre : elles ne recherchent pas un emploi donc elles ne souhaient pas travailler
# table(sous_data_merged$id_na_Raison_absence_recherche,sous_data_merged$Recherche_un_emploi)# filtre : elles ne recherchent pas un emploi donc elles ne souhaient pas travailler
#
#
# # DEGURBA : Aucun problème
# table(sous_data_merged$DEGURBA)
# summary(sous_data_merged$DEGURBA)
#
# # Statut_dans_emploi : 733 NA
# #  filtre : EMPSTAT = 1
# table(sous_data_merged$Statut_dans_emploi)
# summary(sous_data_merged$Statut_dans_emploi)
#
# # Temps_partiel : 50 NA
# #  filtre : EMPSTAT = 1
# table(sous_data_merged$Temps_partiel)
# summary(sous_data_merged$Temps_partiel)
#
# # CSP : Aucun problème
# table(sous_data_merged$CSP)
# summary(sous_data_merged$CSP)
#
# # Perennite_emploi: 1559 NA
# # filter : STAPRO = 3
# table(sous_data_merged$Perennite_emploi)
# summary(sous_data_merged$Perennite_emploi)
# # les NA sont ils des 999 mal classés ? Ou des filtrés ?
# sous_data_merged[is.na(Perennite_emploi)== "TRUE", id_na_Perennite_emploi:= 1]
# table(sous_data_merged$id_na_Perennite_emploi)
# table(sous_data_merged$id_na_Perennite_emploi,sous_data_merged$Statut_dans_emploi)# filtre
#
# # Duree_contrat : 47910 NA
# # Filter : TEMP = 2
# table(sous_data_merged$Duree_contrat)
# summary(sous_data_merged$Duree_contrat)
# # les NA sont ils des 999 mal classés ? Ou des filtrés ?
# sous_data_merged[is.na(Duree_contrat)== "TRUE", id_na_Duree_contrat:= 1]
# table(sous_data_merged$id_na_Duree_contrat)
# table(sous_data_merged$id_na_Duree_contrat,sous_data_merged$Perennite_emploi)# filtre
#
# # FTPTREAS : 21831 NA
# # Filter : FTPT = 2
# table(sous_data_merged$FTPTREAS)
# summary(sous_data_merged$FTPTREAS)
# # les NA sont ils des 999 mal classés ? Ou des filtrés ?
# sous_data_merged[is.na(FTPTREAS)== "TRUE", id_na_FTPTREAS:= 1]
# table(sous_data_merged$id_na_FTPTREAS)
# table(sous_data_merged$id_na_FTPTREAS,sous_data_merged$Temps_partiel)# filtre
#
#
# # Volume_travail_souhaite : 670461 NA
# # filter : EMPSTAT = 1
# table(sous_data_merged$Volume_travail_souhaite)
# summary(sous_data_merged$Volume_travail_souhaite)
#
# # Volume_travail_habituel : 30143 NA
# # filter : EMPSTAT = 1
# table(sous_data_merged$Volume_travail_habituel)
# summary(sous_data_merged$Volume_travail_habituel)
#
# # HWACTUAL : 4443 NA
# # Filter : EMPSTAT = 1
# table(sous_data_merged$HWACTUAL)
# summary(sous_data_merged$HWACTUAL)
#
# # HWACTUA2: 12667 NA
# # Filter : EXIST2J=2
# table(sous_data_merged$HWACTUA2)
# summary(sous_data_merged$HWACTUA2)
#
# # Decile_salaire : Aucun problème
# table(sous_data_merged$Decile_salaire)
# summary(sous_data_merged$Decile_salaire)
#
# # Niveau_education : Aucun problème
# table(sous_data_merged$Niveau_education)
# summary(sous_data_merged$Niveau_education)
#
# # Domaine_education : Aucun problème
# table(sous_data_merged$Domaine_education)
# summary(sous_data_merged$Domaine_education)
#
# # Nb_enfants_moins_2_ans : Aucun problème
# table(sous_data_merged$Nb_enfants_moins_2_ans)
# summary(sous_data_merged$Nb_enfants_moins_2_ans)
#
# # Nb_enfants_entre_3_5_ans : Aucun problème
# table(sous_data_merged$Nb_enfants_entre_3_5_ans)
# summary(sous_data_merged$Nb_enfants_entre_3_5_ans)
#
# # Nb_enfants_entre_6_8_ans : Aucun problème
# table(sous_data_merged$Nb_enfants_entre_6_8_ans)
# summary(sous_data_merged$Nb_enfants_entre_6_8_ans)
#
# # Nb_enfants_entre_9_11_ans : Aucun problème
# table(sous_data_merged$Nb_enfants_entre_9_11_ans)
# summary(sous_data_merged$Nb_enfants_entre_9_11_ans)
#
# # Nb_enfants_entre_11_14_ans : Aucun problème
# table(sous_data_merged$Nb_enfants_entre_11_14_ans)
# summary(sous_data_merged$Nb_enfants_entre_11_14_ans)
################################################################################
#         4 . Equivalent temps plein  ========================
################################################################################
calcul_EQTP <- function(data_merged_loc){
df_merged<- as.data.frame(data_merged_loc)
# 100*table(df_merged$Volume_travail_habituel)/nrow(df_merged)
# 100*table(df_merged$Statut_semaine)/nrow(df_merged)
# 100*table(df_merged$Statut_emploi_1_emploi)/nrow(df_merged)
df_merged <- df_merged %>%
mutate(Temps_partiel_clean = ifelse(Temps_partiel ==2, 0, Temps_partiel)) %>%
mutate(Temps_partiel_clean = ifelse(Temps_partiel ==9, 0, Temps_partiel_clean)) %>% # Création de TP égale à 1 si temps plein, 0 si temps partiel
mutate(ETP = ifelse(Temps_partiel_clean ==1, 1, 0)) %>%
mutate(heures_clean = ifelse(Volume_travail_habituel ==99 | Volume_travail_habituel ==00, 0, Volume_travail_habituel)) %>% # création de heures clean, variable nettoyée du nombre d'heures travaillées habituellement
group_by(Annee_enquete, Temps_partiel_clean) %>%
mutate(heures_clean = ifelse(Statut_emploi_1_emploi==1, heures_clean, is.na(heures_clean))) %>%
mutate(mediane_h = median(heures_clean, na.rm = TRUE)) %>%
group_by(Annee_enquete) %>%
mutate(mediane_h = max(mediane_h, na.rm = TRUE))
# summary(df_merged$EQTP)
df_merged <- df_merged %>%
mutate(EQTP = Volume_travail_habituel/mediane_h) %>% # création du coefficient d'équivalent temps plein (linéaire: variable continue)
mutate(EQTP = ifelse(Statut_emploi_1_emploi==1, EQTP, 0)) %>%
mutate(EQTP = ifelse(EQTP>1, 1, EQTP))%>%
mutate(EQTP = ifelse(is.na(heures_clean), 0 , EQTP))
#### Il y a des NAN dans EQTP ssi Volume_travail_habituel = NAN ssi Volume_travail_habituel == 99 ou 0
# summary(df_merged$EQTP)
df_merged <- df_merged %>%
mutate(Poids_final = EQTP*COEFF) # création du poids final égal au coeff initial de l'enquête x le coeff d'ETP
summary(df_merged$Poids_final)
df_merged <- df_merged %>%
select(-ETP) # suppression de la variable ETP, conservation des autres variables
data_merged_loc<- as.data.table(df_merged)
return(data_merged_loc)
}
data_merged <- calcul_EQTP(data_merged)
################################################################################
#         4 . Equivalent temps plein  ========================
################################################################################
calcul_EQTP <- function(data_merged_loc){
df_merged<- as.data.frame(data_merged_loc)
# 100*table(df_merged$Volume_travail_habituel)/nrow(df_merged)
# 100*table(df_merged$Statut_semaine)/nrow(df_merged)
# 100*table(df_merged$Statut_emploi_1_emploi)/nrow(df_merged)
df_merged <- df_merged %>%
mutate(Temps_partiel_clean = ifelse(Temps_partiel ==2, 0, Temps_partiel)) %>%
mutate(Temps_partiel_clean = ifelse(Temps_partiel ==9, 0, Temps_partiel_clean)) %>% # Création de TP égale à 1 si temps plein, 0 si temps partiel
mutate(ETP = ifelse(Temps_partiel_clean ==1, 1, 0)) %>%
mutate(heures_clean = ifelse(Volume_travail_habituel ==99 | Volume_travail_habituel ==00, 0, Volume_travail_habituel)) %>% # création de heures clean, variable nettoyée du nombre d'heures travaillées habituellement
group_by(Annee_enquete, Temps_partiel_clean) %>%
mutate(heures_clean = ifelse(Statut_emploi_1_emploi==1, heures_clean, is.na(heures_clean))) %>%
mutate(mediane_h = median(heures_clean, na.rm = TRUE)) %>%
group_by(Annee_enquete) %>%
mutate(mediane_h = max(mediane_h, na.rm = TRUE))
# summary(df_merged$EQTP)
df_merged <- df_merged %>%
mutate(EQTP = Volume_travail_habituel/mediane_h) %>% # création du coefficient d'équivalent temps plein (linéaire: variable continue)
mutate(EQTP = ifelse(Statut_emploi_1_emploi==1, EQTP, 0)) %>%
mutate(EQTP = ifelse(Temps_partiel_clean==1, 1, EQTP)) %>%
mutate(EQTP = ifelse(EQTP>1, 1, EQTP))%>%
mutate(EQTP = ifelse(is.na(heures_clean), 0 , EQTP))
#### Il y a des NAN dans EQTP ssi Volume_travail_habituel = NAN ssi Volume_travail_habituel == 99 ou 0
# summary(df_merged$EQTP)
df_merged <- df_merged %>%
mutate(Poids_final = EQTP*COEFF) # création du poids final égal au coeff initial de l'enquête x le coeff d'ETP
summary(df_merged$Poids_final)
df_merged <- df_merged %>%
select(-ETP) # suppression de la variable ETP, conservation des autres variables
data_merged_loc<- as.data.table(df_merged)
return(data_merged_loc)
}
data_merged <- calcul_EQTP(data_merged)
summary(data_merged$Poids_final)
summary(data_merged$EQTP)
repgen <- "/Users/charlottecombier/Desktop/ENSAE/Projet_statapp"
liste_annees <- 1998:2018
pays <- "HU"
nom_fichier_html <- paste("Taux_activite", pays, sep = "_")
creer_base <- TRUE
mettre_coeffs_nan_a_zero <- TRUE
repo_prgm <- paste(repgen, "programmes/Projet_stat_app" , sep = "/")
repo_sorties <- paste(repgen, "sorties" , sep = "/")
repo_data <- paste(repgen, "Data" , sep = "/")
repo_inter <- paste(repgen, "bases_intermediaires" , sep = "/")
rep_html <- paste(repgen, "pages_html" , sep="/")
liste_variables <- c('QHHNUM', #Identifiant ménage
# 'COEFFY', #Yearly weighting factor,
# 'COEFFH', #Yearly weighting factor of the sample for household characteristics
'COEFF',
'COUNTRY',
'SEX',
'YEAR',
# 'YEARBIR', #Année de naissance
'AGE',
'YSTARTWK', # Year in which person started working for this employer or as self-employed. 9999 not applicable
'ILOSTAT', # ILO working status. 1 = employed. 2 = Unemployed. 3 = inactive. 4 = Compulsory military service. 5 = persons < 15 years old
'WSTATOR', # Labor status during the reference week (for aged >15 years). 1 = worked at least 1 hours. 2 =  Vacances/service militaire/... 3 = licencicé. 4 = Service militaire ou civique. 5 = Autre.
'WANTWORK', # Willingness to work for person not seeking employment. 1 = but would nevertheless like to have work. 2 = does not want to have work. 9 = not applicable
'WISHMORE', # Wish to work usually more than the current number of hours. 0 = No. 1 = Yes
'AVAILBLE', # Availability to start working within two weeks if work were found now. 1 = Could start to work immediately. 2 = could not start
'SEEKWORK', # Seeking employment during previous four weeks. 1 = Person has already found a job which will start within a period of at most 3 months. 2 = Person has already found a job which will start in more than 3 months. 3 = Person is not seeking employment and has not found
# any job to start late. 4 = Person is seeking employment
# 'SEEKREAS', # Reasons for not searching an employment because. 1 = awaiting recall to work (persons on lay-off). 2 = of own illness or disability. 3 = looking after children or incapacitated adults (from 2006). 4 = of other personal or family responsibilities. 5 = of education or training. 6 = of retirement. 7 = of belief that no work is available. 8 = of other reasons
'DEGURBA', # Degree of urbanisation. 1 = Densely. 2 = intermediate. 3 = rural
'STAPRO', #Professional status. 1 = Self-employed with employees. 2 = Self-employed without employees. 3 = Employee. 4 = Family worker.
'FTPT', # 1 = Full-time. 2 = Part-time job.
'ISCO3D',
'ISCOPR3D',
'TEMP', # 1 = CDI. 2 = CDD
'TEMPDUR', # Total duration of temporary job or work contract of limited duration. 1 = Less than one month. 2 =1 to 3 months. 3 = 4 to 6 months. 4 = 7 to 12 months = 17. 5 = 13 to 18 months. 6 = 19 to 24 months. 7 = 25 to 36 months. 8 = More than 3 years
'FTPTREAS', # Reasons for the part-time job 1 = Person is undergoing school education or training. 2 = Of own illness or disability. 3 =Looking after children or incapacitated adults. 4 = Other family or personal reasons (from 2006). 5 = Person could not find a full-time job. 6 = Other
'HWWISH', # Number of hours that the person would like to work in total
'HWUSUAL', # Number of hours per week usually worked in the main job
'HWACTUAL', # Number of hours actually worked during the reference week in the main job
'HWACTUA2', # Number of hours actually worked during the reference week in the second job
'INCDECIL', # Monthly (take home) pay from main job
'NEEDCARE', # Person is not searching for a job or is working part time because. 1 = Suitable care services for children are not available or affordable. 2 = Suitable care services for ill, disabled, elderly are not available or affordable. 3 = Suitable care services for both children and ill, disabled and elderly are not available or affordable.. 4 = Care facilities do not influence decision for working part time or not searching for a job
'HATLEV1D', # Level of education. L = low. M = Medium. H = High
'HATFIELD', #Field of education. Different codes before and after 2003
'HHNBCH2', # Number of children [0,2] years in the household
'HHNBCH5', # Number of children  [3,5] years in the household
'HHNBCH8', # Number of children [6,8] years in the household
'HHNBCH11', # Number of children [9,11] years in the household
'HHNBCH14', # Number of children [12,14] years in the household
'HHNBCH17', # Number of children [15,17] years in the household
'HHNBCH24', # Number of children [18,24] years in the household
'NOWKREAS', # Reasons for not working while having a job (includes maternity and parentality leaves)
'LEAVREAS', # Reasons for leaving last job
'AVAIREAS', # Reasons for not being available within the two next weeks to come
'SIGNISAL', # Continuing receipt of the wage or salary (from 2006)
# 'EMPSTAT', # Etre en emploi (variable filtre)
'TEMPREAS', # Raison pour être en CDD
'WSTAT1Y', # Situation pro un an avant l’enquête (emploi, chômage, …)
'STAPRO1Y', # Situation pro un an avant l'enquête (salarié, auto-entrepreneur, …)
'SEEKDUR', # Temps passé en recherche d’emploi
'HHCHILDR', # est ce qu'il y a des enfants dans le foyer ou est ce qu'ils sont dans un autre foyer'
'HHNBPERS', #  nombre total de personnes dans le ménages
'HHNB0014', # Number of children in the household (aged less than 15 years)
'HATYEAR', # année ou on a fini ses études
'LOOKREAS', # raisons pour lesquels on veut trouver un autre job
'REGIONW', # région du travail (peut être faire des analyses en fonction de la ruralité etc?)
'MARSTAT', # statut marital
# 'ISCO4D', # numéro isco mais agrégé a priori
'SIZEFIRM', # Pour compter en fnt de la taille de la boîte.
'NATIONAL', # Nationalité
'HHPARTNR', # est ce que le partenaire cohabite
'SUPVISOR', # manageur ?
'TEMPAGCY', # indicateur du fait d'être "en agence d'intérim"
'SHIFTWK', # Shift work
'EVENWK', # Evening work
'NIGHTWK', # Night work
'SATWK', # Saturday work
'SUNWK', # Sunday work
'EXIST2J', # existence de plusieurs emplois
'HHWKSTAT', #  Working status of adults living in the same household
'HHAGEYG', # Age of the youngest child in the household (aged less than 25 years)
'MAINSTAT', # Main status
'HHCOMP', # Composition du foyer = mais vraible a retraiter
'HHLINK',# lien pers de réf
'HHPRIV' # Classification of individuals (private household members) - voir si on devreait pas filtré que sur les ménages ordinaires
)
age_min <- 20
age_max <- 59
################################################################################
#            B. PACKAGES              -------------------------------
################################################################################
source(paste(repo_prgm , "01_packages.R" , sep = "/"))
################################################################################
#            I. CREATION OU IMPOERT DE LA BASE   ===============================
################################################################################
source(paste(repo_prgm , "02_creation_base.R" , sep = "/"))
# Soit on créé la table, soit on l'importe...
if(creer_base){
data_merged <- fnt_creation_base_stats_des()
}else{
nom_base <- paste(repo_data, "/data_intermediaire/base_", pays, ".Rdata", sep = "")
load(file = nom_base)
}
################################################################################
#            II. NETTOYAGE, PREPARATION                        ===============================
################################################################################
# On filtre sur la population d'intérêt :
data_merged <- data_merged[AGE - 2 >= age_min, ]
data_merged <- data_merged[AGE + 2 <= age_max, ]
data_merged <- data_merged[HHPRIV==1, ]
data_merged <- data_merged[HHLINK==1 | HHLINK==2, ]
# on filtre aussi sur les gens qui sont sorti d'études : ie l'année d'enquête est plus grande que l'année de fin d'études
# normalement les 9999 disparaissent et on a que 1555 cas de personnes qui finissent leurs études l'année d'enquête
# Ca me parait ok : table(data_merged$annee_fin_etude==data_merged$Annee_enquete )
data_merged <- data_merged[YEAR > HATYEAR, ]
# La version avec les variable renommées si besoin
# data_merged <- data_merged[Age_tranche - 2 >= age_min, ]
# data_merged <- data_merged[Age_tranche + 2 <= age_max, ]
# data_merged <- data_merged[menage_ordinaire==1, ]
# data_merged <- data_merged[lien_pers_ref==1 | lien_pers_ref==2, ]
# data_merged <- data_merged[Annee_enquete > annee_fin_etude, ]
source(paste(repo_prgm , "03_nettoyage.R" , sep = "/"))
# 100 * nrow(data_merged[is.na(COEFF), ])/nrow(data_merged)
data_merged <- calcul_EQTP(data_merged)
# On récupère les fonctions
source(paste(repo_prgm , "04_calculs_tables.R" , sep = "/"))
# On initialise une liste de graphes vides
list_graph <- list()
longueur_liste <- 0
# On calcule les taux d'activités et d'emplois par âge et sexe
liste_var <- c("Age_tranche", "Sexe_1H_2F")
calculs_age <- calcul_taux_emplois_activite(liste_var_groupby = liste_var, data_loc = data_merged)
# Sauf erreur il faut multiplir le taux d'emploi en etp par 100 (la population aussi ?):
# Non a priori problème
calculs_age$tx_emploi_etp <- calculs_age$tx_emploi_etp*100
calculs_age$population_emplois_etp <- calculs_age$population_emplois_etp*100
calculs_age
calculs_age <- nettoyage_tranche_age(calculs_age, age_min, age_max)
calculs_age <- nettoyage_sexe(calculs_age)
calculs_age
liste_var <- c("Age_tranche", "Sexe_1H_2F", "Annee_enquete")
calculs_annee <- calcul_taux_emplois_activite(liste_var_groupby = liste_var, data_loc = data_merged)
#            IV.B CONSTRUCTION GRAPHIQUES               ------------------
calculs_annee
# Phase de nettoyage
calculs_annee <- nettoyage_tranche_age(calculs_annee, age_min, age_max)
calculs_annee <- nettoyage_sexe(calculs_annee)
# sous_data_merged <- data_merged[Age_tranche %in% c(22, 27, 32, 37, 42, 47, 52, 57)]
sous_data_merged <- data_merged[Age_tranche - 2 >= age_min, ]
sous_data_merged <- sous_data_merged[Age_tranche + 2 <= age_max, ]
calculs_annee <- calcul_taux_emplois_activite(liste_var_groupby = liste_var, data_loc = sous_data_merged)
# Phase de nettoyage
calculs_annee <- nettoyage_niveau_education(calculs_annee)
liste_var <- c("Niveau_education", "Sexe_1H_2F", "Annee_enquete")
# sous_data_merged <- data_merged[Age_tranche %in% c(22, 27, 32, 37, 42, 47, 52, 57)]
sous_data_merged <- data_merged[Age_tranche - 2 >= age_min, ]
sous_data_merged <- sous_data_merged[Age_tranche + 2 <= age_max, ]
calculs_annee <- calcul_taux_emplois_activite(liste_var_groupby = liste_var, data_loc = sous_data_merged)
# Phase de nettoyage
calculs_annee <- nettoyage_niveau_education(calculs_annee)
calculs_annee <- nettoyage_sexe(calculs_annee)
sous_calculs_annee <- calculs_annee[Niveau_education %in% c("Bas","Moyen", "Elevé")]
sous_calculs_annee <- ff_interaction(sous_calculs_annee, Niveau_education, Sexe)
sous_data_merged <- data_merged
dw_tot <- svydesign(ids = ~1, data = sous_data_merged, weights = ~ sous_data_merged$COEFF)
sous_data_merged_fem <- sous_data_merged[Sexe_1H_2F==2, ]
dw_fem <- svydesign(ids = ~1, data = sous_data_merged_fem, weights = ~ sous_data_merged_fem$COEFF)
# Hommes
sous_data_merged_hom<- sous_data_merged[Sexe_1H_2F==1, ]
dw_hom <- svydesign(ids = ~1, data = sous_data_merged_hom, weights = ~ sous_data_merged_hom$COEFF)
# Idem en emploi
sous_data_merged_emp <- sous_data_merged[i_emploi==1, ]
dw_emp <- svydesign(ids = ~1, data = sous_data_merged_emp, weights = ~ sous_data_merged_emp$COEFF)
# Idem temps partiel
sous_data_merged_tp <- sous_data_merged[Temps_partiel_clean==0, ]
dw_tp <- svydesign(ids = ~1, data = sous_data_merged_tp, weights = ~ sous_data_merged_tp$COEFF)
# Idem sans emploi
sous_data_merged_sans_emp <- sous_data_merged[i_emploi==0, ]
dw_sans_emp <- svydesign(ids = ~1, data = sous_data_merged_sans_emp, weights = ~ sous_data_merged_sans_emp$COEFF)
# Femmes et sans emploi :
sous_data_merged_sans_emp_fem <- sous_data_merged[i_emploi==0 & Sexe_1H_2F==2, ]
dw_sans_emp_fem <- svydesign(ids = ~1, data = sous_data_merged_sans_emp_fem, weights = ~ sous_data_merged_sans_emp_fem$COEFF)
# Femme en emploi
sous_data_merged_emp_fem <- sous_data_merged_fem[i_emploi==1, ]
dw_emp_fem <- svydesign(ids = ~1, data = sous_data_merged_emp_fem, weights = ~ sous_data_merged_emp_fem$COEFF)
# Homme en emploi
sous_data_merged_emp_hom <- sous_data_merged_hom[i_emploi==1, ]
dw_emp_hom <- svydesign(ids = ~1, data = sous_data_merged_emp_hom, weights = ~ sous_data_merged_emp_hom$COEFF)
# Femme sans emploi
sous_data_merged_sans_emp_fem <- sous_data_merged_fem[i_emploi==0, ]
dw_sans_emp_fem <- svydesign(ids = ~1, data = sous_data_merged_sans_emp_fem, weights = ~ sous_data_merged_sans_emp_fem$COEFF)
# Homme sans emploi
sous_data_merged_sans_emp_hom <- sous_data_merged_hom[i_emploi==0, ]
dw_sans_emp_hom <- svydesign(ids = ~1, data = sous_data_merged_sans_emp_hom, weights = ~ sous_data_merged_sans_emp_hom$COEFF)
tab_FH_age <- svytable(~ Age_tranche+Sexe_1H_2F, dw_tot)
lprop(tab_FH_age)
tab_FH_enquete <- svytable(~ Annee_enquete +Sexe_1H_2F, dw_tot)
lprop(tab_FH_enquete)
tab_fam_enf_age <- svytable(~ Age_tranche+enf, dw_tot)
lprop(tab_fam_enf_age)
tab_fam_enf_enquete <- svytable(~ Annee_enquete +enf, dw_tot)
lprop(tab_fam_enf_enquete)
tab_FH_enf_enquete <- svytable(~ Sexe_1H_2F +enf, dw_tot)
lprop(tab_FH_enf_enquete)
tab_enf_m3_age <- svytable(~ Age_tranche+enf_m3ans, dw_tot)
lprop(tab_enf_m3_age)
tab_enf_m3_enquete <- svytable(~ Annee_enquete +enf_m3ans, dw_tot)
lprop(tab_enf_m3_enquete)
tab_enf_m6_age <- svytable(~ Age_tranche+enf_m6ans, dw_tot)
lprop(tab_enf_m6_age)
tab_fam_nb_enf_age <- svytable(~ Age_tranche+nb_enf, dw_tot)
lprop(tab_fam_nb_enf_age)
tab_fam_nb_enf_enquete <- svytable(~ Annee_enquete +nb_enf, dw_tot)
lprop(tab_fam_nb_enf_enquete)
tab_stat_mar_age <- svytable(~ Age_tranche+statu_marital, dw_tot)
lprop(tab_stat_mar_age)
tab_stat_mar_enquete <- svytable(~ Annee_enquete +statu_marital, dw_tot)
lprop(tab_stat_mar_enquete)
tab_FH_stat_mar_enquete <- svytable(~ Sexe_1H_2F +statu_marital, dw_tot)
lprop(tab_FH_stat_mar_enquete)
tab_foyer_age <- svytable(~ Age_tranche+sit_pro_foyer, dw_tot)
lprop(tab_foyer_age)
tab_foyer_enquete <- svytable(~ Annee_enquete +sit_pro_foyer, dw_tot)
lprop(tab_foyer_enquete)
tab_FH_foyer <- svytable(~ Sexe_1H_2F +sit_pro_foyer, dw_tot)
lprop(tab_FH_foyer)
tab_foyer_avant_age <- svytable(~ Age_tranche+sit_pro_avant_enq_foyer, dw_tot)
lprop(tab_foyer_avant_age)
tab_foyer_avant_enquete <- svytable(~ Annee_enquete +sit_pro_avant_enq_foyer, dw_tot)
lprop(tab_foyer_avant_enquete)
tab_dip_age <- svytable(~ Age_tranche+Niveau_education, dw_tot)
lprop(tab_dip_age)
tab_dip_enquete <- svytable(~ Annee_enquete +Niveau_education, dw_tot)
lprop(tab_dip_enquete)
tab_sect_etu_age <- svytable(~ Age_tranche+Domaine_education, dw_tot)
lprop(tab_sect_etu_age)
tab_fem_stat_mar_emploi <- svytable(~ statu_marital+i_emploi, dw_fem)
lprop(tab_fem_stat_mar_emploi)
tab_fem_nb_enf_emploi <- svytable(~ nb_enf+i_emploi, dw_fem)
lprop(tab_fem_nb_enf_emploi)
tab_fem_nb_enf_actif <- svytable(~ nb_enf +i_actif, dw_fem)
lprop(tab_fem_nb_enf_actif)
tab_fem_enf_3ans_emploi <- svytable(~ enf_m3ans+i_emploi, dw_fem)
lprop(tab_fem_enf_3ans_emploi)
tab_tp_sexe <- svytable(~ Sexe_1H_2F +Temps_partiel_clean, dw_tot)
lprop(tab_tp_sexe)
tab_tp_sexe <- svytable(~ Temps_partiel_clean + Sexe_1H_2F, dw_tp)
lprop(tab_tp_sexe)
tab_sexe_tp <- svytable(~ Sexe_1H_2F +Raisons_temps_partiel, dw_tp)
lprop(tab_sexe_tp)
tab_nb_enf_tp_enf <- svytable(~ nb_enf +raisons_tp_enf_fam, dw_tp)
lprop(tab_nb_enf_tp_enf)
# A temps partiel pour raison familiale mois de 3 : très fréquent lorsque au moins un enfant a moins de trois ans
tab_enf_m3ans_tp_enf <- svytable(~ enf_m3ans +raisons_tp_enf_fam, dw_tp)
lprop(tab_enf_m3ans_tp_enf)
tab_sexe_tp_enf <- svytable(~ Sexe_1H_2F +raisons_tp_enf_fam, dw_tp)
lprop(tab_sexe_tp_enf)
tab_tp_marie_fem <- svytable(~ Temps_partiel_clean +statu_marital, dw_fem)
lprop(tab_tp_marie_fem)
tab_sexe_emp_no_trav_enf <- svytable(~ Sexe_1H_2F +raisons_emp_no_trav_enf_fam, dw_tot)
lprop(tab_sexe_emp_no_trav_enf)
tab_sexe_dem_enf_fam <- svytable(~ Sexe_1H_2F +raison_dem_enf_fam, dw_tot)
lprop(tab_sexe_dem_enf_fam)
tab_sexe_no_trav_enf_fam_se<- svytable(~ Sexe_1H_2F +raison_no_trav_enf_fam, dw_sans_emp)
lprop(tab_sexe_no_trav_enf_fam_se)
tab_stat_emp_age <- svytable(~ Age_tranche+Statut_dans_emploi, dw_emp)
lprop(tab_stat_emp_age)
tab_stat_emp_enquete <- svytable(~ Annee_enquete +Statut_dans_emploi, dw_emp)
lprop(tab_stat_emp_enquete)
tab_FH_stat_emp <- svytable(~ Sexe_1H_2F +Statut_dans_emploi, dw_emp)
lprop(tab_FH_stat_emp)
tab_souhait_emp_enquete <- svytable(~ Annee_enquete +Souhaite_travailler, dw_sans_emp)
lprop(tab_souhait_emp_enquete)
tab_souhait_emp_enquete_fem <- svytable(~ Annee_enquete +Souhaite_travailler, dw_sans_emp_fem)
lprop(tab_souhait_emp_enquete_fem)
tab_FH_souhait_emp <- svytable(~ Sexe_1H_2F +Souhaite_travailler, dw_sans_emp)
lprop(tab_FH_souhait_emp)
tab_dispo_emp_age <- svytable(~ Age_tranche+Disponible_pour_travailler, dw_sans_emp)
lprop(tab_dispo_emp_age)
tab_dispo_emp_age_fem <- svytable(~ Age_tranche+Disponible_pour_travailler, dw_sans_emp_fem)
lprop(tab_dispo_emp_age_fem)
tab_dispo_emp_enquete <- svytable(~ Annee_enquete +Disponible_pour_travailler, dw_sans_emp)
lprop(tab_dispo_emp_enquete)
tab_dispo_emp_enquete_fem <- svytable(~ Annee_enquete +Disponible_pour_travailler, dw_sans_emp_fem)
lprop(tab_dispo_emp_enquete_fem)
tab_FH_dispo_emp <- svytable(~ Sexe_1H_2F +Disponible_pour_travailler, dw_sans_emp)
lprop(tab_FH_dispo_emp)
tab_csp_age <- svytable(~ Age_tranche+CSP_tot_1, dw_tot)
lprop(tab_csp_age)
tab_fem_enf_dip <- svytable(~ nb_enf+Niveau_education, dw_fem)
lprop(tab_fem_enf_dip)
tab_fem_enf_csp <- svytable(~ nb_enf+CSP_tot_1, dw_fem)
lprop(tab_fem_enf_csp)
tab_tp_age <- svytable(~ Age_tranche+Temps_partiel_clean, dw_tot)
lprop(tab_tp_age)
tab_tp_age_emp <- svytable(~ Age_tranche+Temps_partiel_clean, dw_emp)
lprop(tab_tp_age_emp)
tab_tp_enquete <- svytable(~ Annee_enquete +Temps_partiel_clean, dw_tot)
lprop(tab_tp_enquete)
tab_cdi_age <- svytable(~ Age_tranche+Perennite_emploi, dw_tot)
lprop(tab_cdi_age)
tab_cdi_age_emp <- svytable(~ Age_tranche+Perennite_emploi, dw_emp)
lprop(tab_cdi_age_emp)
tab_cdi_age_fem <- svytable(~ Age_tranche+Perennite_emploi, dw_fem)
lprop(tab_cdi_age_fem)
tab_manag_age_emp <- svytable(~ Age_tranche+travail_respon, dw_emp)
lprop(tab_manag_age_emp)
tab_manag_age_fem_emp <- svytable(~ Age_tranche+travail_respon, dw_emp_fem)
lprop(tab_manag_age_fem_emp)
tab_autre_emp_age_emp <- svytable(~ Age_tranche+exist_autre_emploi, dw_emp)
lprop(tab_autre_emp_age_emp)
tab_pas_tmpspl_age <- svytable(~ Age_tranche+raisons_tp_abs_plein, dw_tot)
lprop(tab_pas_tmpspl_age)
tab_pas_tmpspl_age_emp <- svytable(~ Age_tranche+raisons_tp_abs_plein, dw_emp)
lprop(tab_pas_tmpspl_age_emp)
